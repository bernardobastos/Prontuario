package br.ufba.dcc.prontuario.dao;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.support.annotation.NonNull;

import java.util.ArrayList;
import java.util.List;

import br.ufba.dcc.prontuario.modelo.Paciente;

/**
 * Created by Bernardo Bastos on 18/07/2017.
 */

public class PacienteDAO extends SQLiteOpenHelper {


    public PacienteDAO(Context context) {
        super(context, "Prontuario", null, 2);
    }

    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase) {
        String sql = "CREATE TABLE Pacientes (id INTEGER PRIMARY KEY," +
                "nome TEXT NOT NULL, endereco TEXT, telefone TEXT, idade TEXT, patologia TEXT " +
                "peso TEXT, altura TEXT;";
        sqLiteDatabase.execSQL(sql);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        String sql;
        switch (oldVersion) {
            case 1:
                sql = "ALTER TABLE Pacientes ADD COLUM historico TEXT";
                db.execSQL(sql);
                break;
        }
    }

    public List<Paciente> buscaPaciente() {
        String sql = "SELECT * FROM Pacientes;";
        SQLiteDatabase db = getReadableDatabase();
        Cursor c = db.rawQuery(sql, null);

        List<Paciente> pacientes = new ArrayList<Paciente>();
        while (c.moveToNext()) {
            Paciente paciente = new Paciente();
            paciente.setNome(c.getString(c.getColumnIndex("nome")));
            paciente.setId(c.getLong(c.getColumnIndex("id")));
            paciente.setEndereco(c.getString(c.getColumnIndex("endereco")));
            paciente.setTelefone(c.getString(c.getColumnIndex("telefone")));
            paciente.setIdade(c.getString(c.getColumnIndex("idade")));
            paciente.setPatologia(c.getString(c.getColumnIndex("patologia")));
            paciente.setPeso(c.getString(c.getColumnIndex("peso")));
            paciente.setAltura(c.getString(c.getColumnIndex("altura")));
            pacientes.add(paciente);
        }
        c.close();
        return pacientes;

    }

    @NonNull
    private ContentValues pegaDadosPaciente(Paciente paciente) {
        ContentValues dados = new ContentValues();
        dados.put("nome", paciente.getNome());
        dados.put("endereço", paciente.getEndereço());
        dados.put("telefone", paciente.getTelefone());
        dados.put("idade", paciente.getIdade());
        dados.put("patologia", paciente.getPatologia());
        dados.put("peso", paciente.getPeso());
        dados.put("altura", paciente.getAltura());
        return dados;
    }


    public void insere(Paciente paciente) {
        SQLiteDatabase db = getWritableDatabase();
        ContentValues dados = pegaDadosPaciente(paciente);
        long id = db.insert("Pacientes", null, dados);
        //db.close();
    }

    public void deleta(Paciente paciente) {
        SQLiteDatabase db = getWritableDatabase();
        String[] params = {paciente.getId().toString()};
        db.delete("Pacientes", "id=?", params);
    }

    public void altera(Paciente paciente) {
        SQLiteDatabase db = getWritableDatabase();
        ContentValues dados = pegaDadosPaciente(paciente);
        String[] params = {paciente.getId().toString()};
        db.update("Pacientes", dados, "id=?", params);
    }


}
